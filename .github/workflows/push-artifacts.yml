name: Push Artifacts

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  create-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: rymndhng/release-on-push-action@master
        id: release
        with:
          bump_version_scheme: minor
          
  push-release-assets-matrix:
    name: Release Go Binary
    needs: [create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
    steps:
    - uses: actions/checkout@v3
    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "1.18"
        md5sum: FALSE
        sha256sum: TRUE
        project_path: "./server"
        binary_name: "jarvis"
        release_tag: ${{ needs.create-release.outputs.tag_name }}
        asset_name: jarvis-${{ matrix.goos }}-${{ matrix.goarch }}

  push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build -f ./Dockerfile ./server --tag jarvis:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u USERNAME --password-stdin
    - name: Push image
      run: |
        REMOTE_NAME="ghcr.io/${{ github.repository_owner }}/jarvis:latest"
        docker tag jarvis:latest $REMOTE_NAME
        docker push $REMOTE_NAME
